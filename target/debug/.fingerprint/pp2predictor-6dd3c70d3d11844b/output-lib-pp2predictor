{"message":"unused import: `EuclideanSpace`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/pdb_parser.rs","byte_start":214,"byte_end":228,"line_start":6,"line_end":6,"column_start":22,"column_end":36,"is_primary":true,"text":[{"text":"use cgmath::{Point3, EuclideanSpace};","highlight_start":22,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src/pdb_parser.rs","byte_start":212,"byte_end":228,"line_start":6,"line_end":6,"column_start":20,"column_end":36,"is_primary":true,"text":[{"text":"use cgmath::{Point3, EuclideanSpace};","highlight_start":20,"highlight_end":36}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `EuclideanSpace`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:6:22\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse cgmath::{Point3, EuclideanSpace};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"the trait bound `Point3<f64>: Default` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11166,"byte_end":11177,"line_start":325,"line_end":325,"column_start":25,"column_end":36,"is_primary":true,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":25,"highlight_end":36}],"label":"the trait `Default` is not implemented for `Point3<f64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/pdb_parser.rs","byte_start":11132,"byte_end":11139,"line_start":324,"line_end":324,"column_start":23,"column_end":30,"is_primary":false,"text":[{"text":"#[derive(Clone, Copy, Default)]","highlight_start":23,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"#[derive(Default)]","def_site_span":{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/default.rs","byte_start":4374,"byte_end":4391,"line_start":186,"line_end":186,"column_start":1,"column_end":18,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `Point3<f64>: Default` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:325:25\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m324\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#[derive(Clone, Copy, Default)]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this derive macro expansion\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PointWrapper(Point3<f64>);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `Default` is not implemented for `Point3<f64>`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11866,"byte_end":11872,"line_start":348,"line_end":348,"column_start":24,"column_end":30,"is_primary":true,"text":[{"text":"            kdtree.add(*coord, index).unwrap();","highlight_start":24,"highlight_end":30}],"label":"expected `&[_; _]`, found struct `PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11862,"byte_end":11865,"line_start":348,"line_end":348,"column_start":20,"column_end":23,"is_primary":false,"text":[{"text":"            kdtree.add(*coord, index).unwrap();","highlight_start":20,"highlight_end":23}],"label":"arguments to this method are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected reference `&[_; _]`\n      found struct `PointWrapper`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/construction.rs","byte_start":1112,"byte_end":1115,"line_start":34,"line_end":34,"column_start":12,"column_end":15,"is_primary":true,"text":[{"text":"    pub fn add(&mut self, query: &[A; K], item: T) {","highlight_start":12,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m: mismatched types\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:348:24\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            kdtree.add(*coord, index).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&[_; _]`, found struct `PointWrapper`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12marguments to this method are incorrect\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: expected reference `\u001b[0m\u001b[0m\u001b[1m&[_; _]\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                  found struct `\u001b[0m\u001b[0m\u001b[1mPointWrapper\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/construction.rs:34:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m34\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn add(&mut self, query: &[A; K], item: T) {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\n\n"}
{"message":"no method named `unwrap` found for unit type `()` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11881,"byte_end":11887,"line_start":348,"line_end":348,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"            kdtree.add(*coord, index).unwrap();","highlight_start":39,"highlight_end":45}],"label":"method not found in `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no method named `unwrap` found for unit type `()` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:348:39\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            kdtree.add(*coord, index).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `()`\u001b[0m\n\n"}
{"message":"the trait bound `PointWrapper: fixed::traits::Fixed` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11862,"byte_end":11865,"line_start":348,"line_end":348,"column_start":20,"column_end":23,"is_primary":true,"text":[{"text":"            kdtree.add(*coord, index).unwrap();","highlight_start":20,"highlight_end":23}],"label":"the trait `fixed::traits::Fixed` is not implemented for `PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `fixed::traits::Fixed`:\n  fixed::FixedI128<Frac>\n  fixed::FixedI16<Frac>\n  fixed::FixedI32<Frac>\n  fixed::FixedI64<Frac>\n  fixed::FixedI8<Frac>\n  fixed::FixedU128<Frac>\n  fixed::FixedU16<Frac>\n  fixed::FixedU32<Frac>\nand 2 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `PointWrapper` to implement `kiddo::fixed::kdtree::Axis`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `kiddo::fixed::construction::<impl kiddo::fixed::kdtree::KdTree<A, T, K, B, IDX>>::add`","code":null,"level":"note","spans":[{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/construction.rs","byte_start":219,"byte_end":223,"line_start":7,"line_end":7,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"impl<A: Axis, T: Content, const K: usize, const B: usize, IDX: Index<T = IDX>>","highlight_start":9,"highlight_end":13}],"label":"required by this bound in `kiddo::fixed::construction::<impl KdTree<A, T, K, B, IDX>>::add`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `PointWrapper: fixed::traits::Fixed` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:348:20\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m348\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            kdtree.add(*coord, index).unwrap();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `fixed::traits::Fixed` is not implemented for `PointWrapper`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `fixed::traits::Fixed`:\u001b[0m\n\u001b[0m              fixed::FixedI128<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI16<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI32<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI64<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI8<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU128<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU16<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU32<Frac>\u001b[0m\n\u001b[0m            and 2 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `PointWrapper` to implement `kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `kiddo::fixed::construction::<impl kiddo::fixed::kdtree::KdTree<A, T, K, B, IDX>>::add`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/construction.rs:7:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<A: Axis, T: Content, const K: usize, const B: usize, IDX: Index<T = IDX>>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `kiddo::fixed::construction::<impl KdTree<A, T, K, B, IDX>>::add`\u001b[0m\n\n"}
{"message":"the trait bound `PointWrapper: fixed::traits::Fixed` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11769,"byte_end":11780,"line_start":345,"line_end":345,"column_start":26,"column_end":37,"is_primary":true,"text":[{"text":"        let mut kdtree = KdTree::new();","highlight_start":26,"highlight_end":37}],"label":"the trait `fixed::traits::Fixed` is not implemented for `PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following other types implement trait `fixed::traits::Fixed`:\n  fixed::FixedI128<Frac>\n  fixed::FixedI16<Frac>\n  fixed::FixedI32<Frac>\n  fixed::FixedI64<Frac>\n  fixed::FixedI8<Frac>\n  fixed::FixedU128<Frac>\n  fixed::FixedU16<Frac>\n  fixed::FixedU32<Frac>\nand 2 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required for `PointWrapper` to implement `kiddo::fixed::kdtree::Axis`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `kiddo::fixed::kdtree::KdTree::<A, T, K, B, IDX>::new`","code":null,"level":"note","spans":[{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/kdtree.rs","byte_start":5236,"byte_end":5240,"line_start":160,"line_end":160,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"    A: Axis,","highlight_start":8,"highlight_end":12}],"label":"required by this bound in `KdTree::<A, T, K, B, IDX>::new`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `PointWrapper: fixed::traits::Fixed` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:345:26\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m345\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut kdtree = KdTree::new();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `fixed::traits::Fixed` is not implemented for `PointWrapper`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `fixed::traits::Fixed`:\u001b[0m\n\u001b[0m              fixed::FixedI128<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI16<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI32<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI64<Frac>\u001b[0m\n\u001b[0m              fixed::FixedI8<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU128<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU16<Frac>\u001b[0m\n\u001b[0m              fixed::FixedU32<Frac>\u001b[0m\n\u001b[0m            and 2 others\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: required for `PointWrapper` to implement `kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `kiddo::fixed::kdtree::KdTree::<A, T, K, B, IDX>::new`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/kdtree.rs:160:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m160\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    A: Axis,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `KdTree::<A, T, K, B, IDX>::new`\u001b[0m\n\n"}
{"message":"the method `within` exists for struct `KdTree<PointWrapper, usize, 3, 32, u32>`, but its trait bounds were not satisfied","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/pdb_parser.rs","byte_start":12187,"byte_end":12193,"line_start":357,"line_end":357,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"            .within(&query_coords, radius.powi(2), &squared_euclidean)","highlight_start":14,"highlight_end":20}],"label":"method cannot be called on `KdTree<PointWrapper, usize, 3, 32, u32>` due to unsatisfied trait bounds","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Add>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as BitAnd>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as BitOr>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as BitXor>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Div>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Mul>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Not>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Rem>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Shl<u32>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Shr<u32>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<PointWrapper as Sub>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<_ as Div<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<_ as FromStr>::Err = ParseFixedError`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<_ as Mul<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<_ as Rem<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `<_ as Rem<<PointWrapper as Fixed>::NonZeroBits>>::Output = PointWrapper`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: AddAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Add`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Binary`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitAndAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitAnd`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitOrAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitOr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitXorAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: BitXor`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Debug`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: DivAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Div`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Eq`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: FromStr`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Hash`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: LowerExp`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: LowerHex`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: MulAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Mul`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Not`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Octal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Ord`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<f32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<f64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<fixed::F128Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<half::bfloat::bf16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<half::binary16::f16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<i128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<i16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<i32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<i64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<i8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<isize>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<u128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<u16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<u64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<u8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq<usize>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialEq`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<f32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<f64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<fixed::F128Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<half::bfloat::bf16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<half::binary16::f16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<i128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<i16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<i32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<i64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<i8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<isize>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<u128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<u16>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<u64>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<u8>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd<usize>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: PartialOrd`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Product`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: RemAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Rem`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Shl<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: ShlAssign<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Shr<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: ShrAssign<u32>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: SubAssign`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Sub`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: Sum`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: UpperExp`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: UpperHex`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: bytemuck::contiguous::Contiguous`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: bytemuck::pod::Pod`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: bytemuck::zeroable::Zeroable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: fixed::helpers::Sealed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: fixed::traits::FixedOptionalFeatures`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: fixed::traits::Fixed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: fixed::traits::FromFixed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: fixed::traits::ToFixed`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: kiddo::fixed::kdtree::Axis`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `PointWrapper: std::fmt::Display`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: Div<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: DivAssign<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: Mul<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: MulAssign<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: PartialEq<F128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: PartialOrd<F128>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: Rem<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: Rem<<PointWrapper as Fixed>::NonZeroBits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: RemAssign<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: RemAssign<<PointWrapper as Fixed>::NonZeroBits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11165,"line_start":325,"line_end":325,"column_start":1,"column_end":24,"is_primary":false,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":24}],"label":"doesn't satisfy `_: TransparentWrapper<<PointWrapper as Fixed>::Bits>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the following trait bounds were not satisfied:\n`PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Debug`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: fixed::traits::Fixed`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: fixed::helpers::Sealed`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: fixed::traits::FixedOptionalFeatures`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<fixed::F128Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<fixed::F128Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<fixed::f128::private::F128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<fixed::f128::private::F128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<f64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<f64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<f32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<f32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<half::bfloat::bf16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<half::bfloat::bf16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<half::binary16::f16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<half::binary16::f16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<usize>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<usize>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<u128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<u128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<u64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<u64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<u16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<u16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<u8>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<u8>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<isize>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<isize>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<i128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<i128>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<i64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<i64>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<i32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<i32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<i16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<i16>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd<i8>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq<i8>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Product`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Sum`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: ShrAssign<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Shr<u32>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Shr<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: ShlAssign<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Shl<u32>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Shl<u32>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitXorAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as BitXor>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitXor`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitOrAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as BitOr>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitOr`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitAndAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as BitAnd>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: BitAnd`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Not>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Not`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: RemAssign<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Rem<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Rem<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: RemAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Rem<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Rem<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: DivAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Div<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Div<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: MulAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Mul<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Mul<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: RemAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Rem>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Rem`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: DivAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Div>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Div`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: MulAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Mul>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Mul`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: SubAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Sub>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Sub`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: AddAssign`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as Add>::Output = PointWrapper`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Add`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: fixed::traits::ToFixed`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: fixed::traits::FromFixed`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`<PointWrapper as FromStr>::Err = fixed::from_str::ParseFixedError`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: FromStr`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: UpperHex`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: LowerHex`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Octal`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Binary`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: UpperExp`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: LowerExp`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: std::fmt::Display`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: bytemuck::transparent::TransparentWrapper<<PointWrapper as fixed::traits::Fixed>::Bits>`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: bytemuck::pod::Pod`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: bytemuck::zeroable::Zeroable`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: bytemuck::contiguous::Contiguous`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Ord`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialOrd`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: PartialEq`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Eq`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\n`PointWrapper: Hash`\nwhich is required by `PointWrapper: kiddo::fixed::kdtree::Axis`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"the traits `kiddo::fixed::kdtree::Axis`, `bytemuck::zeroable::Zeroable`, `bytemuck::pod::Pod`, `bytemuck::contiguous::Contiguous`, `bytemuck::transparent::TransparentWrapper`, `fixed::helpers::Sealed`, `fixed::traits::Fixed`, `fixed::traits::FromFixed`, `fixed::traits::ToFixed`, `Add`, `Sub`, `Mul`, `Div`, `Rem`, `AddAssign`, `SubAssign`, `MulAssign`, `DivAssign`, `RemAssign`, `Not`, `BitAnd`, `BitOr`, `BitXor`, `Shl`, `Shr`, `BitAndAssign`, `BitOrAssign`, `BitXorAssign`, `ShlAssign`, `ShrAssign`, `Sum`, `Product`, `std::fmt::Display`, `Octal`, `Binary`, `LowerHex`, `UpperHex`, `LowerExp`, `UpperExp`, `FromStr`,  and `fixed::traits::FixedOptionalFeatures` must be implemented","code":null,"level":"note","spans":[{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":26318,"byte_end":26335,"line_start":767,"line_end":767,"column_start":1,"column_end":18,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":28274,"byte_end":28289,"line_start":841,"line_end":841,"column_start":1,"column_end":16,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":29812,"byte_end":29828,"line_start":898,"line_end":898,"column_start":1,"column_end":17,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":31293,"byte_end":31311,"line_start":953,"line_end":953,"column_start":1,"column_end":19,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":32790,"byte_end":32808,"line_start":1008,"line_end":1008,"column_start":1,"column_end":19,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":35388,"byte_end":35406,"line_start":1110,"line_end":1110,"column_start":1,"column_end":19,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs","byte_start":36677,"byte_end":36695,"line_start":1161,"line_end":1161,"column_start":1,"column_end":19,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/kdtree.rs","byte_start":855,"byte_end":908,"line_start":22,"line_end":22,"column_start":1,"column_end":54,"is_primary":true,"text":[{"text":"pub trait Axis: Fixed + Default + Debug + Copy + Sync {}","highlight_start":1,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":2714,"byte_end":2753,"line_start":84,"line_end":84,"column_start":13,"column_end":52,"is_primary":true,"text":[{"text":"            pub trait FixedOptionalFeatures: Sealed {}","highlight_start":13,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":13753,"byte_end":15851,"line_start":394,"line_end":447,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"comment_features! {","highlight_start":1,"highlight_end":20},{"text":"    r#\"This trait is used to provide supertraits to the [`Fixed`] trait","highlight_start":1,"highlight_end":72},{"text":"depending on the crate’s [optional features], and should not be used directly.","highlight_start":1,"highlight_end":79},{"text":"","highlight_start":1,"highlight_end":1},{"text":" 1. If the `arbitrary` feature is enabled, [`Arbitrary`] is a supertrait of","highlight_start":1,"highlight_end":76},{"text":"    [`Fixed`].","highlight_start":1,"highlight_end":15},{"text":"","highlight_start":1,"highlight_end":1},{"text":" 2. If the `borsh` experimental feature is enabled, [`BorshSerialize`] and","highlight_start":1,"highlight_end":75},{"text":"    [`BorshDeserialize`] are supertraits of [`Fixed`].","highlight_start":1,"highlight_end":55},{"text":"","highlight_start":1,"highlight_end":1},{"text":" 3. If the `num-traits` experimental feature is enabled, the following","highlight_start":1,"highlight_end":71},{"text":"    are supertraits of [`Fixed`]:","highlight_start":1,"highlight_end":34},{"text":"","highlight_start":1,"highlight_end":1},{"text":"      * [`Zero`]","highlight_start":1,"highlight_end":17},{"text":"      * [`Bounded`]","highlight_start":1,"highlight_end":20},{"text":"      * [`Inv`]","highlight_start":1,"highlight_end":16},{"text":"      * [`CheckedAdd`], [`CheckedSub`], [`CheckedNeg`],","highlight_start":1,"highlight_end":56},{"text":"        [`CheckedMul`], [`CheckedDiv`], [`CheckedRem`],","highlight_start":1,"highlight_end":56},{"text":"        [`CheckedShl`], [`CheckedShr`]","highlight_start":1,"highlight_end":39},{"text":"      * [`SaturatingAdd`], [`SaturatingSub`], [`SaturatingMul`]","highlight_start":1,"highlight_end":64},{"text":"      * [`WrappingAdd`], [`WrappingSub`], [`WrappingNeg`],","highlight_start":1,"highlight_end":59},{"text":"        [`WrappingMul`], [`WrappingShl`], [`WrappingShr`]","highlight_start":1,"highlight_end":58},{"text":"      * [`OverflowingAdd`], [`OverflowingSub`], [`OverflowingMul`]","highlight_start":1,"highlight_end":67},{"text":"      * [`ToPrimitive`], [`FromPrimitive`]","highlight_start":1,"highlight_end":43},{"text":"      * [`FloatConst`]","highlight_start":1,"highlight_end":23},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    The following are *not* supertraits of [`Fixed`], even though they","highlight_start":1,"highlight_end":71},{"text":"    are implemented for fixed-point numbers where applicable:","highlight_start":1,"highlight_end":62},{"text":"","highlight_start":1,"highlight_end":1},{"text":"      * [`One`] because not all fixed-point numbers can represent the","highlight_start":1,"highlight_end":70},{"text":"        value 1","highlight_start":1,"highlight_end":16},{"text":"      * [`Num`] because it has [`One`] as a supertrait","highlight_start":1,"highlight_end":55},{"text":"      * [`MulAdd`], [`MulAddAssign`] because","highlight_start":1,"highlight_end":45},{"text":"        <code>[MulAdd][`MulAdd`]::[mul\\_add][`mul_add`]</code>","highlight_start":1,"highlight_end":63},{"text":"        conflicts with","highlight_start":1,"highlight_end":23},{"text":"        <code>[Fixed]::[mul\\_add][Fixed::mul_add]</code>","highlight_start":1,"highlight_end":57},{"text":"","highlight_start":1,"highlight_end":1},{"text":"    Similarly, [`Signed`] and [`Unsigned`] are *not* supertraits of","highlight_start":1,"highlight_end":68},{"text":"    [`FixedSigned`] and [`FixedUnsigned`] because they have [`Num`] as","highlight_start":1,"highlight_end":71},{"text":"    a supertrait.","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":" 4. If the `serde` feature is enabled, [`Serialize`] and","highlight_start":1,"highlight_end":57},{"text":"    [`Deserialize`] are supertraits of [`Fixed`].","highlight_start":1,"highlight_end":50},{"text":"","highlight_start":1,"highlight_end":1},{"text":"[`MulAddAssign`]: num_traits::ops::mul_add::MulAddAssign","highlight_start":1,"highlight_end":57},{"text":"[`MulAdd`]: num_traits::ops::mul_add::MulAdd","highlight_start":1,"highlight_end":45},{"text":"[`Num`]: num_traits::Num","highlight_start":1,"highlight_end":25},{"text":"[`One`]: num_traits::identities::One","highlight_start":1,"highlight_end":37},{"text":"[`Signed`]: num_traits::sign::Signed","highlight_start":1,"highlight_end":37},{"text":"[`Unsigned`]: num_traits::sign::Unsigned","highlight_start":1,"highlight_end":41},{"text":"[`mul_add`]: num_traits::ops::mul_add::MulAdd::mul_add","highlight_start":1,"highlight_end":55},{"text":"[optional features]: crate#optional-features","highlight_start":1,"highlight_end":45},{"text":"\"#","highlight_start":1,"highlight_end":3},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"comment_features!","def_site_span":{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":2417,"byte_end":2446,"line_start":74,"line_end":74,"column_start":1,"column_end":30,"is_primary":false,"text":[{"text":"macro_rules! comment_features {","highlight_start":1,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":19164,"byte_end":19179,"line_start":548,"line_end":548,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"pub trait Fixed","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":142573,"byte_end":142592,"line_start":3651,"line_end":3651,"column_start":1,"column_end":20,"is_primary":true,"text":[{"text":"pub trait FromFixed {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs","byte_start":145822,"byte_end":145839,"line_start":3740,"line_end":3740,"column_start":1,"column_end":18,"is_primary":true,"text":[{"text":"pub trait ToFixed {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":2027,"byte_end":2052,"line_start":77,"line_end":77,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":4785,"byte_end":4810,"line_start":186,"line_end":186,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":8369,"byte_end":8394,"line_start":316,"line_end":316,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":12078,"byte_end":12103,"line_start":450,"line_end":450,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":15042,"byte_end":15067,"line_start":553,"line_end":553,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":20021,"byte_end":20052,"line_start":742,"line_end":742,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":21859,"byte_end":21890,"line_start":810,"line_end":810,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":23446,"byte_end":23477,"line_start":869,"line_end":869,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":25025,"byte_end":25056,"line_start":928,"line_end":928,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs","byte_start":26647,"byte_end":26678,"line_start":990,"line_end":990,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/str/traits.rs","byte_start":19507,"byte_end":19531,"line_start":547,"line_end":547,"column_start":1,"column_end":25,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":721,"byte_end":734,"line_start":35,"line_end":35,"column_start":1,"column_end":14,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":3714,"byte_end":3742,"line_start":148,"line_end":148,"column_start":1,"column_end":29,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":6541,"byte_end":6568,"line_start":250,"line_end":250,"column_start":1,"column_end":28,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":9394,"byte_end":9422,"line_start":352,"line_end":352,"column_start":1,"column_end":29,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":12358,"byte_end":12383,"line_start":453,"line_end":453,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":15742,"byte_end":15767,"line_start":573,"line_end":573,"column_start":1,"column_end":26,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":19208,"byte_end":19242,"line_start":702,"line_end":702,"column_start":1,"column_end":35,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":21227,"byte_end":21260,"line_start":775,"line_end":775,"column_start":1,"column_end":34,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":23234,"byte_end":23268,"line_start":848,"line_end":848,"column_start":1,"column_end":35,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":25032,"byte_end":25063,"line_start":919,"line_end":919,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs","byte_start":27240,"byte_end":27271,"line_start":1003,"line_end":1003,"column_start":1,"column_end":32,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/iter/traits/accum.rs","byte_start":720,"byte_end":750,"line_start":17,"line_end":17,"column_start":1,"column_end":31,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/iter/traits/accum.rs","byte_start":1723,"byte_end":1757,"line_start":38,"line_end":38,"column_start":1,"column_end":35,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/helpers.rs","byte_start":1274,"byte_end":1296,"line_start":53,"line_end":53,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"pub trait Sealed: Copy {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/pod.rs","byte_start":1928,"byte_end":1975,"line_start":37,"line_end":37,"column_start":1,"column_end":48,"is_primary":true,"text":[{"text":"pub unsafe trait Pod: Zeroable + Copy + 'static {}","highlight_start":1,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/zeroable.rs","byte_start":918,"byte_end":950,"line_start":25,"line_end":25,"column_start":1,"column_end":33,"is_primary":true,"text":[{"text":"pub unsafe trait Zeroable: Sized {","highlight_start":1,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/contiguous.rs","byte_start":3043,"byte_end":3086,"line_start":78,"line_end":78,"column_start":1,"column_end":44,"is_primary":true,"text":[{"text":"pub unsafe trait Contiguous: Copy + 'static {","highlight_start":1,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/transparent.rs","byte_start":4372,"byte_end":4422,"line_start":126,"line_end":126,"column_start":1,"column_end":51,"is_primary":true,"text":[{"text":"pub unsafe trait TransparentWrapper<Inner: ?Sized> {","highlight_start":1,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider annotating `PointWrapper` with `#[derive(Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]`","code":null,"level":"help","spans":[{"file_name":"src/pdb_parser.rs","byte_start":11142,"byte_end":11142,"line_start":325,"line_end":325,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"pub struct PointWrapper(Point3<f64>);","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"#[derive(Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: the method `within` exists for struct `KdTree<PointWrapper, usize, 3, 32, u32>`, but its trait bounds were not satisfied\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/pdb_parser.rs:357:14\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct PointWrapper(Point3<f64>);\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-----------------------\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Add>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as BitAnd>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as BitOr>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as BitXor>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Div>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Mul>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Not>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Rem>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Shl<u32>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Shr<u32>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<PointWrapper as Sub>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<_ as Div<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<_ as FromStr>::Err = ParseFixedError`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<_ as Mul<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<_ as Rem<<PointWrapper as Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `<_ as Rem<<PointWrapper as Fixed>::NonZeroBits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: AddAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Add`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Binary`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitAndAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitAnd`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitOrAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitOr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitXorAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: BitXor`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Debug`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: DivAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Div`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Eq`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: FromStr`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Hash`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: LowerExp`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: LowerHex`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: MulAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Mul`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Not`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Octal`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Ord`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<f32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<f64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<fixed::F128Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<half::bfloat::bf16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<half::binary16::f16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<i128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<i16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<i32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<i64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<i8>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<isize>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<u128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<u16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<u64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<u8>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq<usize>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialEq`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<f32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<f64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<fixed::F128Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<half::bfloat::bf16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<half::binary16::f16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<i128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<i16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<i32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<i64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<i8>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<isize>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<u128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<u16>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<u64>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<u8>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd<usize>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: PartialOrd`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Product`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: RemAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Rem`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Shl<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: ShlAssign<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Shr<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: ShrAssign<u32>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: SubAssign`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Sub`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: Sum`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: UpperExp`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: UpperHex`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: bytemuck::contiguous::Contiguous`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: bytemuck::pod::Pod`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: bytemuck::zeroable::Zeroable`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: fixed::helpers::Sealed`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: fixed::traits::FixedOptionalFeatures`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: fixed::traits::Fixed`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: fixed::traits::FromFixed`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: fixed::traits::ToFixed`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `PointWrapper: std::fmt::Display`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Div<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: DivAssign<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Mul<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: MulAssign<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PartialEq<F128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: PartialOrd<F128>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Rem<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: Rem<<PointWrapper as Fixed>::NonZeroBits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: RemAssign<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: RemAssign<<PointWrapper as Fixed>::NonZeroBits>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mdoesn't satisfy `_: TransparentWrapper<<PointWrapper as Fixed>::Bits>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m357\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            .within(&query_coords, radius.powi(2), &squared_euclidean)\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod cannot be called on `KdTree<PointWrapper, usize, 3, 32, u32>` due to unsatisfied trait bounds\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: the following trait bounds were not satisfied:\u001b[0m\n\u001b[0m             `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Debug`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: fixed::traits::Fixed`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: fixed::helpers::Sealed`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: fixed::traits::FixedOptionalFeatures`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<fixed::F128Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<fixed::F128Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<fixed::f128::private::F128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<fixed::f128::private::F128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<f64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<f64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<f32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<f32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<half::bfloat::bf16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<half::bfloat::bf16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<half::binary16::f16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<half::binary16::f16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<usize>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<usize>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<u128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<u128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<u64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<u64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<u16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<u16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<u8>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<u8>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<isize>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<isize>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<i128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<i128>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<i64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<i64>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<i32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<i32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<i16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<i16>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd<i8>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq<i8>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Product`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Sum`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: ShrAssign<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Shr<u32>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Shr<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: ShlAssign<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Shl<u32>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Shl<u32>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitXorAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as BitXor>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitXor`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitOrAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as BitOr>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitOr`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitAndAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as BitAnd>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: BitAnd`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Not>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Not`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: RemAssign<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Rem<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Rem<<PointWrapper as fixed::traits::Fixed>::NonZeroBits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: RemAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Rem<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Rem<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: DivAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Div<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Div<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: MulAssign<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Mul<<PointWrapper as fixed::traits::Fixed>::Bits>>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Mul<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: RemAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Rem>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Rem`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: DivAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Div>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Div`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: MulAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Mul>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Mul`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: SubAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Sub>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Sub`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: AddAssign`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as Add>::Output = PointWrapper`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Add`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: fixed::traits::ToFixed`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: fixed::traits::FromFixed`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `<PointWrapper as FromStr>::Err = fixed::from_str::ParseFixedError`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: FromStr`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: UpperHex`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: LowerHex`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Octal`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Binary`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: UpperExp`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: LowerExp`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: std::fmt::Display`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: bytemuck::transparent::TransparentWrapper<<PointWrapper as fixed::traits::Fixed>::Bits>`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: bytemuck::pod::Pod`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: bytemuck::zeroable::Zeroable`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: bytemuck::contiguous::Contiguous`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Ord`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialOrd`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: PartialEq`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Eq`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m             `PointWrapper: Hash`\u001b[0m\n\u001b[0m             which is required by `PointWrapper: kiddo::fixed::kdtree::Axis`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the traits `kiddo::fixed::kdtree::Axis`, `bytemuck::zeroable::Zeroable`, `bytemuck::pod::Pod`, `bytemuck::contiguous::Contiguous`, `bytemuck::transparent::TransparentWrapper`, `fixed::helpers::Sealed`, `fixed::traits::Fixed`, `fixed::traits::FromFixed`, `fixed::traits::ToFixed`, `Add`, `Sub`, `Mul`, `Div`, `Rem`, `AddAssign`, `SubAssign`, `MulAssign`, `DivAssign`, `RemAssign`, `Not`, `BitAnd`, `BitOr`, `BitXor`, `Shl`, `Shr`, `BitAndAssign`, `BitOrAssign`, `BitXorAssign`, `ShlAssign`, `ShrAssign`, `Sum`, `Product`, `std::fmt::Display`, `Octal`, `Binary`, `LowerHex`, `UpperHex`, `LowerExp`, `UpperExp`, `FromStr`,  and `fixed::traits::FixedOptionalFeatures` must be implemented\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/fmt/mod.rs:767:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/kiddo-2.0.1/src/fixed/kdtree.rs:22:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub trait Axis: Fixed + Default + Debug + Copy + Sync {}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/traits.rs:394:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m394\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mcomment_features! {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m395\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    r#\"This trait is used to provide supertraits to the [`Fixed`] trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m396\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mdepending on the crate’s [optional features], and should not be used directly.\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m397\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m446\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\"#\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m447\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|_^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m548\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub trait Fixed\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3651\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub trait FromFixed {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m3740\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub trait ToFixed {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/arith.rs:77:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/str/traits.rs:547:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/ops/bit.rs:35:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/rustc/9eb3afe9ebe9c7d2b84b71002d44f4a0edac95e0/library/core/src/iter/traits/accum.rs:17:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/fixed-1.23.1/src/helpers.rs:53:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m53\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub trait Sealed: Copy {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/pod.rs:37:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub unsafe trait Pod: Zeroable + Copy + 'static {}\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/zeroable.rs:25:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub unsafe trait Zeroable: Sized {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/contiguous.rs:78:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m78\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub unsafe trait Contiguous: Copy + 'static {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m::: \u001b[0m\u001b[0m/Users/shashankpritam/.cargo/registry/src/github.com-1ecc6299db9ec823/bytemuck-1.13.1/src/transparent.rs:126:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m126\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0mpub unsafe trait TransparentWrapper<Inner: ?Sized> {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `comment_features` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider annotating `PointWrapper` with `#[derive(Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m325\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[38;5;10m#[derive(Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"message":"aborting due to 6 previous errors; 1 warning emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 6 previous errors; 1 warning emitted\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0277, E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mSome errors have detailed explanations: E0277, E0308, E0599.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}
